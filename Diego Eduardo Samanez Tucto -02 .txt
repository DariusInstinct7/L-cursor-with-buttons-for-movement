
#include <Matrix.h>
Matrix pixel= Matrix(12,10,11); //DIN,CLK,CS

int i=0,j=0;
bool valor1,valor0,valor6,valor7;
int x=0,y=0,pos=0; //posición inicial del cursor
byte A=2,B=3,C=4,D=5,E=6,F=7; //Entradas de los pulsadores
bool datosL[]={1,0,0,0,1,1,1,1};

void setup(){
   Serial.begin(9600);
   for(i=2;i<=7;i++)
      pinMode(i,INPUT);
   pixel.clear(); // limpia matriz
  // pixel.write(x,y,HIGH); //Encendemos cursor en 0,0
}

void loop(){
   if(x==0&&y==0){ //SIN PRESIONAR NI UN BOTON MUESTRA LA PRIMERA FORMA DE L SOLO SI ESTAMOS EN X 0 Y 0.
    
     //ESCRITURA ALREDEDOR DEL Cursor x,y . 
    pos=0;
 for(j=y-1;j<=y+1;j++){// 0 1 2
    if(x-1>=0){
    i=x-1; 
    pixel.write(i,j,datosL[pos]);
    }
    pos++;    
 }
  if(y+1<=7){
 i=x;
 j=y+1;
 pixel.write(i,j,datosL[pos]);
  }
 pos++;
 for(j=y+1;j>=y-1;j--){ // 0 1 2
    if(x+1<=7){
    i=x+1; 
    pixel.write(i,j,datosL[pos]);
    }
    pos++;
 }
 if(y-1>=0){
 i=x;
 j=y-1;
 pixel.write(i,j,datosL[pos]);
 }
 pos++;
 }
  //FIN DE ESCRITURA ALREDEDOR DEL Cursor x,y .
  

 // ESPERANDO A PRESIONAR BOTON
   while(digitalRead(F)==HIGH && digitalRead(E)==HIGH && digitalRead(A)==HIGH && digitalRead(B)==HIGH && digitalRead(C)==HIGH && digitalRead(D)==HIGH){}
   delay(100); //Evitar rebote
   pixel.clear(); //Apagamos cursor
   if(digitalRead(A)==LOW){
      if(y!=0){
         y--;
      }
   }
   if(digitalRead(C)==LOW){
      if(y!=7){
         y++;
      }
   }
   if(digitalRead(D)==LOW){
      if(x!=0){
         x--;
      }
   }
   if(digitalRead(B)==LOW){
      if(x!=7){
         x++;
      }
   }
// GIRA EN SENTIDO ANTIHORARIO
    if(digitalRead(F)==LOW){ 
        valor6=datosL[6];
        valor7=datosL[7];
         // GIRA EN SENTIDO HORARIO
         for(i=7;i>=0;i--){
         if(i!=6 && i!=7) { //los  que faltan rellenar
         datosL[i+2]=datosL[i];
         } 
      
         } 
         datosL[0]=valor6;          datosL[1]=valor7;//desplazado en 2 posiciones el arreglo.
   }


// GIRA EN SENTIDO HORARIO
if(digitalRead(E)==LOW){ 
         //son 5 1s los que se desplazan
         for(i=0;i<=7;i++){
         if(i==0){
         valor0=datosL[0];
         } else
         if(i==1){
         valor1=datosL[1];
         } else {
         datosL[i-2]=datosL[i];
         } 
         if(i==7){
         datosL[6]=valor0;
         datosL[7]=valor1;
         }
         } //desplazado en 2 posiciones el arreglo.
   }

   
   
//ESCRITURA ALREDEDOR DEL Cursor x,y .
 pos=0;
 for(j=y-1;j<=y+1;j++){// 0 1 2
    if(x-1>=0){  i=x-1;  pixel.write(i,j,datosL[pos]);
    }
    pos++;    
 }
  if(y+1<=7){ i=x; j=y+1; pixel.write(i,j,datosL[pos]);
  }
    pos++;
 for(j=y+1;j>=y-1;j--){ // 0 1 2
    if(x+1<=7){  i=x+1;   pixel.write(i,j,datosL[pos]);
    }
    pos++; }
 
 if(y-1>=0){ i=x; j=y-1; pixel.write(i,j,datosL[pos]);
 }
 pos++;
//FIN DE ESCRITURA ALREDEDOR DEL Cursor x,y .
 
   while(digitalRead(F)==LOW || digitalRead(E)==LOW || digitalRead(A)==LOW || digitalRead(B)==LOW || digitalRead(C)==LOW || digitalRead(D)==LOW){}
   delay(100); //Evitar rebote
}